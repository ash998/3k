#if {!@file_exists{.tt/3k/vars/elemental.var}}
{
	#class {elemental_vars} {open};

	#var elementalv[cycle][type] {default};


#nop When down to this many corpses, switch to gather cycle type;
	#var elementalv[cycle][min_corpses] {5};

#nop When up to this many corpses, switch to spend cycle type, set to 0 to use coffin max;
	#var elementalv[cycle][max_corpses] {0};

	#class elemental_vars write {.tt/3k/vars/elemental.var};
	#class {elemental_vars} {close};

};

#class {elemental} {open}

/* Set Guild Variable*/
#var guild elemental

#var elemental[current_cycletype] {$elementalv[cycle][type]};

#nop TODO: This variable needs to be set by something else;
#var elemental[coffin][max] {25};

#function {guild_halt} {
#nop No guild pauses implemented;
        #return  0;
};

#function {guild_cycletype} {
        #return $elemental[current_cycletype];
};

#alias {gcycleset} {
        #if {"%1"!="default" && "%1"!="gather" && "%1"!="spend"} {
                #showme Usage: gcycleset [default|gather|spend];
                #showme        If using "default", it will stay in default untill you set it to something else.;
                #showme        If using "gather" or "spend", it will toggle between the two based on the values;
                #showme        in elementalv[cycle][min_corpses] and elementalv[cycle][max_corpses].;
                #showme        Your current cycle is: @guild_cycletype{};
        } {
                #var elemental[current_cycletype] {%1};
                #var elementalv[cycle][type] {%1};
		save_guild_vars;
        }
};

#alias {ecyclecheck} {
        #nop If we're in default, stay in default. Only swap between gather and spend.;
        #if {"$elemental[current_cycletype]"!="default"} {

                #if {"$elemental[current_cycletype]"=="gather"} {
                        #if {!$elementalv[cycle][max_corpses]} {#var _max_corpses {$elemental[coffin][max]}} {#var _max_corpses {$elementalv[cycle][max_corpses]}};
                        #if {$corpses[coffin] >= $_max_corpses} {
                                #var elemental[current_cycletype] {spend};
                                update_chat <138>Auto switching to spend cycle.<099>;
                        };
                } {
                        #if {$corpses[coffin] < $elementalv[cycle][min_corpses]} {
                                #var elemental[current_cycletype] {gather};
                                update_chat <138>Auto switching to gather cycle.<099>;
                        };
                };
        };
};

#alias {save_guild_vars} {#class elemental_vars write {.tt/3k/vars/elemental.var}};


/* HP Bars */
#act {{ HP:(\d+)/(\d+) C:(\d+)\%  NRG:(\d+)/(\d+)\((\d+)([\+\-]*)\)  SP:(\d+)/(\d+)  S:(\d+)\((\d+)\%\) G2N:(\d+)(\w+)(?:   T:)?([\w\s]*)\:?(\d*)\%?}} {
	#var my[hp][current]		{%2};
	#var my[hp][max]		{%3};
	#var my[cohesion]		{%4};
	#var my[gp1][current]		{%5};
	#var my[gp1][max]		{%6};
	#var my[emit][level]		{%7};
	#var my[emit][mod]		{%8};
	#var my[sp][current]		{%9};
	#var my[sp][max]		{%10};
	#var my[blasts]			{%11};
	#var my[reset]			{%12};
	#var my[g2n]			{%13};
	#var g2n_mod			{%14};
	#var enemy[name]		{%15};
	#var enemy[hp]			{%16}
}


/* Update Status Alias */
#alias {update_status} {
		ecyclecheck;
        #if {"$cooler" == "on" || $corpses[cooler] > 0} {
                #format {sb1_cooler} {%+2s} {$corpses[cooler]};
                #var {sb1_cooler} { CL:<130>$sb1_cooler<088>}
        } {
                #var {sb1_cooler} {}
        };
        #if {"$freezer" == "on" || $corpses[freezer] > 0} {
                #format {sb2_freezer} {%+2s} {$corpses[freezer]};
                #var {sb2_freezer} { FZ:<130>$sb2_freezer<088>}
        } {
                #var {sb2_freezer} {}
        };
	#var {my[hp][graph]}		{@graph{$my[hp][current];$my[hp][max]}};
	#var {my[sp][graph]}		{@graph{$my[sp][current];$my[sp][max]}};
	#var {my[gp1][graph]}		{@graph{$my[gp1][current];$my[gp1][max]}};
	#var {enemy[graph]}		{@graph{$enemy[hp];100}};
	#format {hp}			{%+4s} {@colscale{$my[hp][current];$my[hp][max]}};
	#format {hp_max}		{%+4s} {<128>$my[hp][max]<088>};
	#format {sp}			{%+4s} {@colscale{$my[sp][current];$my[sp][max]}};
	#format {sp_max}		{%+4s} {<128>$my[sp][max]<088>};
	#format {nrg}			{%+4s} {@colscale{$my[gp1][current];$my[gp1][max]}};
	#format {nrg_max}		{%+4s} {<128>$my[gp1][max]<088>};
	#format {ehealth}		{%+3s} {@colscale{$enemy[hp];100}};
	#format {corpses[inventory]}    {%+2s} {$corpses[inventory]};
	#format {corpses[coffin]}       {%+2s} {$corpses[coffin]};
	#if {"$draw[hpbar]" == "on"} {
		#showme {H:${hp}/${hp_max}  S:${sp}/${sp_max}  N:${nrg}/${nrg_max}  E:   ${ehealth}%    IC:<130>${corpses[inventory]}<088>${sb1_cooler}} {-4};
		#showme {H:${my[hp][graph]} S:${my[sp][graph]} N:${my[gp1][graph]} E:${enemy[graph]} CF:<130>${corpses[coffin]}<088>${sb2_freezer}} {-3}
	};
	#if {"$draw[gline]" == "on"} {
		#showme {$mip[gline][1]  $mip[gline][2] <128>R:<088>$mip[round]} {-6}
	}
}

/* Corpse Trigger */
#alias {corpsetrig} {
#nop	slab;
#nop	wrap;
#nop	mdc;
#nop	cd;
#nop	get coins
}

#alias {mudauto} {
	#send !reflex clear;
	#send !panic off;
	#send !repeat combat/evoke energy drain/0/1;
	#send !ekt1;
};

#class {elemental} {close}
