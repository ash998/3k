#class {mage_vars} {open}
#var magev[auto][S] {0};
#var magev[auto][A] {1};
#var magev[auto][PE] {0};
#var magev[auto][PG] {1};
#var magev[auto][mg] {0};
#var magev[auto][MG] {1};
#var magev[auto][SS] {1};
#var magev[auto][B] {1};
#var magev[auto][DS] {0};
#var magev[auto][MB] {0};
#var magev[auto][b] {0};
#var magev[auto][PA] {1};
#var magev[auto][MI] {0};
#var magev[auto][I] {0};
#var magev[auto][MS] {1};
#var magev[auto][PS] {0};
#var magev[auto][M] {0};
#var magev[auto][L] {0};
#var magev[auto][<P>] {0};
#var magev[auto][min_mc] {85};
#var magev[auto][min_sp] {3000};
#var magev[auto][max_sat] {95};   
#class mage_vars read {.tt/3k/vars/mage.var};
#class {mage_vars} {close}

#class {mage} {open}

#var guild mage
#var mage[affect][S] {shield};
#var mage[affect][A] {armor};
#var mage[affect][PE] {protection from evil};
#var mage[affect][PG] {protection from good};
#var mage[affect][mg] {minor globe};
#var mage[affect][MG] {major globe};
#var mage[affect][SS] {stoneskin};
#var mage[affect][B] {blink};
#var mage[affect][DS] {detect scrying};
#var mage[affect][MB] {mind blank};
#var mage[affect][b] {blur};
#var mage[affect][PA] {prismatic aura};
#var mage[affect][MI] {mirror image};
#var mage[affect][I] {invisibility};
#var mage[affect][MS] {magnificent shield};
#var mage[affect][PS] {prismatic sphere};
#var mage[affect][M] {mantle};
#var mage[affect][L] {levitate};
#var mage[affect][<P>] {perform};

#var mage[gem_fetching] {0};

#var mage[downtime][mental_cognition] {0};
#var mage[downtime][spell_points] {0};
#var mage[downtime][saturation] {0};

#act {{^ HP: (\d+)/(\d+) SP: (\d+)/(\d+)}} {
	#var my[hp][current]	{%2};
	#var my[hp][max]	{%3};
	#var my[sp][current]    {%4};
	#var my[sp][max]        {%5};

#nop	#var my[hp][delta]	%4;
#nop	#var my[gp1][current]	%5;
#nop	#var my[gp1][max]	%6;
#nop	#var my[gp1][delta]	%7;
#nop	#var my[gp2][current]	%8;
#nop	#var gxp		%9;
#nop	#format {glvl} {%d} {$gxp};
#nop	#math {gxp_per} {($gxp-$glvl)*100};

#nop Auto cast protection spells. Put them in priority order. Spamming
in case there is lag.;
        #if {!$my[prots][SS] && $magev[auto][SS]} {cast $mage[affect][SS]};
        #if {!$my[prots][MG] && $magev[auto][MG]} {cast $mage[affect][MG]};
	#if {!$my[prots][B] && $magev[auto][B]} {cast $mage[affect][B]};
	#if {!$my[prots][MS] && $magev[auto][MS]} {cast $mage[affect][MS]};
	#if {!$my[prots][A] && $magev[auto][A]} {cast $mage[affect][A]};
	#if {!$my[prots][PG] && $magev[auto][PG]} {cast $mage[affect][PG]};
	#if {!$my[prots][PE] && $magev[auto][PE]} {cast $mage[affect][PE]};
	#if {!$my[prots][PS] && $magev[auto][PS]} {cast $mage[affect][PS]};
	#if {!$my[prots][M] && $magev[auto][M]} {cast $mage[affect][M]};
	#if {!$my[prots][PA] && $magev[auto][PA]} {cast $mage[affect][PA]}; 
	
	#if {$my[gem]<80} {ffetch gem;#var mage[gem_fetching] {1};};


        #if {$my[immersion][rounds]==0 && $my[immersion][count]>0 &&
$my[sp][current]<4000} {cast mystic immersion}; 

        #if {($my[super][current] && $my[gp1][current]>80) ||
($my[super][current] && $my[gp1][current]>5 && $my[super][reset]>95)}
{cast explosive release};

#nop If botting, add downtime based on various parameters;
        #if {$bot} {

	    #nop $my[mental_cognition] is zero when at 100%;
#nop Mental Cognition;
            #if {$my[mental_cognition] && $my[mental_cognition]<$magev[auto][min_mc] && !$mage[downtime][mental_cognition]} {pause_bot;#var mage[downtime][mental_cognition] 1};
#nop Spell Points;

            #if {$my[sp][current]<$magev[auto][min_sp] &&
!$mage[downtime][spell_points]} {pause_bot;#var mage[downtime][spell_points] 1};
#nop Saturation;

            #if {$my[gp1][current]>$magev[auto][max_sat] &&
!$mage[downtime][saturation]} {pause_bot;#var mage[downtime][saturation] 1};

        };



}

#alias {pause_bot} {
        #if {!$halt} {.tmp_pause}
}


#alias {unpause_bot} { 
        #if {!$halt} {#return};

        #var stay_paused 0;

        #nop Only unpause if all the things we're pausing for are fixed;
        
	#foreach {*mage[downtime][]} {item} {#if {$mage[downtime][$item]} {#var stay_paused 1}};
	
	#if {!$stay_paused} {.tmp_unpause}
}


#act {Xoox the fuzzy hedgehog hands something to Orthas.} {
	#var mage[gem_fetching] {0};
}


#act {Having absorbed all you can, you carefully close your
spellbook.} 
{
        #if {$bot && $halt && $mage[downtime][mental_cognition]} {#var mage[downtime][mental_cognition] 0;unpause_bot}
};

#alias {update_status} {
        #if {$bot} {
	    #if {$mage[downtime][spell_points] && $my[sp][current]==$my[sp][max]} {#var mage[downtime][spell_points] 0;unpause_bot};
            #if {$mage[downtime][saturation] && $my[gp1][current]==0} {#var mage[downtime][saturation] 0;unpause_bot};
        };
        #if {"$cooler" == "on" || $corpses[cooler] > 0} {
                #format {sb1_cooler} {%+2s} {$corpses[cooler]};
                #var {sb1_cooler} { CL:<130>$sb1_cooler<088>}
        } {
                #var {sb1_cooler} {}
        };
        #if {"$freezer" == "on" || $corpses[freezer] > 0} {
                #format {sb2_freezer} {%+2s} {$corpses[freezer]};
                #var {sb2_freezer} { FZ:<130>$sb2_freezer<088>}
        } {
                #var {sb2_freezer} {}
        };
        #var {my[hp][graph]}    {@graph{$my[hp][current];${my[hp][max]}}};
	#var {my[sp][graph]} {@graph{$my[sp][current];${my[sp][max]}}}; 
        #var {my[gp1][graph]}   {@graph{$my[gp1][current];100}};
        #var {my[gp2][graph]}   {@graph{$my[gp2][current];$my[gp2][max]}};
#nop        #var {gxp_graph}        {@graph{$gxp_per;100}};
        #var {enemy[graph]}     {@graph{$enemy[hp];100}};
        #format {hp}            {%+4s} {@colscale{$my[hp][current];$my[hp][max]}};
        #format {hp_max}        {%+4s} {<128>$my[hp][max]<088>};
        #format {gp1}           {%+4s} {@colscale{$my[gp1][current];$my[gp1][max]}};
        #format {gp1_max}	{%+4s} {<128>$my[gp1][max]<088>};
        #format {gp2}           {%+3s} {@colscale{$my[gp2][current];$my[gp2][max]}};
        #format {ehealth}       {%+6s} {@colscale{$enemy[hp];100}};
#nop        #format {gxp_col}       {%+7s} {@colscale{$gxp;100}};
#nop        #format {corpses[inventory]}     {%+2s} {$corpses[inventory]};
        #format {corpses[coffin]}  {%+2s} {$corpses[coffin]};
        #format {corpses[freezer]} {%+2s} {$corpses[freezer]};
        #showme {<088>HP:$hp/$hp_max Sat:$gp1\%   Cnc: $gp2\%    Gxp: $my[g2n]\%  E:$ehealth\%    IC:<130>${corpses[inventory]}<088> ${sb1_cooler}} {-4};
        #showme {HP:${my[hp][graph]} SP:${my[sp][graph]} Sat:${my[gp1][graph]} E:${enemy[graph]} CF:<130>${corpses[coffin]}<088>${sb2_freezer}} {-3};
	#showme {$mip[gline][1]  $mip[gline][2] <128>R:<088>$mip[round]} {-6}
}

#alias {corpsetrig} {
  study spellbook
}

#alias {save_guild_vars} {#class mage_vars write {.tt/3k/vars/mage.var}}

#class {mage} {close}
