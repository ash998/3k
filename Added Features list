************
**Features**
************
Command line save:
  The command line now saves across logins.

Local echo:
  Commands sent by the client are now echoed, not only the
  ones from the command line.

Check if file exists:
  Function @file_exists(<filename>) returns true if the
  argument is a file that exists. #read .tt/utility.tin
  for this. 

Don't show mudside minimap:
  Using brief on no instead of brief on yes.

Mage:
  Added mage as a supported guild including automation
  regarding pausing when running a bot. More info below.

Save guild vars:
  The hook save_guild_vars is called on disconnect, making
  it possible to override it from inside guild specific
  scripts to enable saving of guild specific vars. If it
  is not defined in the guild script, it will #nop

Use different roomnote:
  Use #var roomnote {<roomnote>} inside a bot path to set
  which roomnote to "go" to instead of the filename.

Aegis zombie path:
  This path will run aegis levels 1-3, but only into zombie
  rooms, except for the robot on level 1. It will go to
  roomnote aegis1 to start.

Bot path zelligars improved:
  It will now check if you alread have the gloves of acid
  protection, and only get them if you don't. Also it will
  only try to get the key in acid if you do have them.

Show progress of current area
  If using the Area Cycler, the current area will show how
  far within the path you are.

Setup dungeon scaler
  When using the Area Cycler, scaler will be set by the
  client. This is based on what you have defined with the
  dscaler <pathname> <scaler>. It is saved per char per
  guild. Use "dscaler" with no arguments to see syntax and
  your current settings. Note that the "- <path>" command
  will also set the scaler (if defined).

Temp pause/unpause bot
  Pause/unpause a bot temporarily without doing anything
  else. To be used for example from guilds with downtime.

Bot core change
  Changed how the bot handles room short messages and prompt
  lines. Makes it easier to add special (non movement)
  commands from within bot paths, without risking skipping
  mobs unintentionally afterwards.

*********
**Files**
*********
Assuming .tt as base dir.

rc.tin
  *Command line save
  *Local exho
  *Save guild vars

utility.tin
  *Check if file exists

3k/mapper.tin
  *Don't show mudside minimap

3k/mip.tin
  *Mage

3k/vars.tin
  *Save guild vars
  *Command line save

3k/aegis123nr
  *Use different roomnote (dependency)
  *Aegis zombie path

3k/bots/bot_cycle.tin
  *Show progress of current area
  *Setup dungeon scaler
  *Use different roomnote

3k/bots/bot_load.tin
  *Show progress of current area
  *Setup dungeon scaler

3k/bots/bot_main.tin
  *Show progress of current area
  *Temp pause/unpause bot
  *Bot core change

3k/bots/zelligars.tin
  *Bot path zelligars improved

3k/guilds/mage.tin
  *Temp pause/unpause bot (dependency)

********
**Mage**
********
New guild supported! Currently only supports O mages, as S
mage is not viable at the moment.

Uses vars that save on disconnect, or when manually doing
"save_guild_vars", this script automates most of what mages
need to be doing to run efficiently.

The script does not handle corpses at all, this is assumed
to be handled MUDside by reflex and ktrig to ensure they
work even when lagging.

Here is an example of reflex:
  GP1 (40/100):                          
    >95%  : "cast secure shelter"        
    >88%  : "unwrap"                     
    >88%  : "cast spell tap on corpse"   
    >88%  : "cast corpse blast"          

Here is an example of ktrig:
 Your kill trigger is set to do the following commands:  
   wrap all                                              
   cast spell tap on corpse                              
   cast corpse blast                                     
   divvy gold                                            

!IMPORTANT! In order to get Saturation as GP1 you need to:
"set show_gp_as 2".

Use the "mauto" command to setup most of the features. Typing
it with no arguments will show the syntax and your current
settings. Note that - eventually - you can setup all defense
spells via greater contingency, but until then, this can 
keep them up.

*Client side defense spell automation abbreviations:

S  - Shield spell               A  - Armor
PE - Protection from Evil       PG - Protection from Good
mg - Minor Globe of Invuln.     MG - Major Globe
SS - Stone Skin                 B  - Blinking
DS - Detect Scrying             MB - Mind Blank  
b  - Blurred                    PA - Prismatic Aura  
MI - Mirror Image               I  - Invisible  
MS - Magnificent Shield         PS - Prismatic Sphere  
M  - Mantle                     L  - Levitating

Example1: mauto S 
          Will toggle on/off if you want to autocast shield.

Example2: mauto S 1
          Will make it so you will autocast shield.

*Client side debuff spell automation abbreviations:
sl - Slow
fm - Feeblemind
pk - Phantasmal Killer
ma - Mystic Atrophy
ed - Energy Drain


*Other settings:
explosive_release_at - How high to allow Saturation to be
                       without casting explosive release.
mystic_immersion_at  - How low to allow Spell Points to be
                       without casting Mystic Immersion.
spell_tap            - Specifies whether to use or not to
                       use the automation regarding spell
                       tapping (live mobs).

max_sat - How high to allow Saturation to go without making
          the bot pause to regen it.
min_mc  - How low to allow Mental Cognition to go without
          making the bot pause to regen it.
min_sp  - How low to allow Spell Points to go without making
          the bot pause to regen it.

*Exceptions:
If the number of Explosive Releases available are greater
than one, and Saturation is over 5% and Explosive Release
resets within 190 rounds, then it will expend an Explosive
Release.

If we have any Explosive Releases left, and Saturation is
more than 5%, and reset is within 40 rounds, then it will
expend an Explosive Release.

If the number of Mystic Immersions available are greater
than one, and the reset is within 114 rounds (81% or more
towards reset), then it will expend a Mystic Immersion.

If we have any Mystic Immersions left, and reset is within
12 rounds, then it will expend a Mystic Immersion.


*Spell tapping on live mobs
If the spell_tap setting is set to 1, the client will
attempt to keep you at 90% of your max SP by the time that
the next Mystic Immersion/Golem reset happens.

In order to do so, a deficit of SP is calculated. If this
value is positive, we will be lower than 90% of our max SP
by the time of the next reset.

Spell tapping will only occur if you're down at least 500 SP
in order to not waste it due to not being able to heal
overmax.

These variables are used by the Spell Tap automation:
 #var MaxSatToSpellTapAt {85} - Don't tap if Saturation is
                                higher than this.
 #var SPDeltaPerMI {6000}     - How many net SP you gain per
                                time you use MI.
 #var SPSpentPerRnd {35}      - Approximately how many SP
                                you lose each round while MI
                                is not running. It is better
                                to keep this number a bit
                                lower than what you lose, in
                                order to not partially waste
                                MIs.

*Automatic gem buying
When your gem % is lower than 80, the client will "ffetch
gem".

NOTE! You need to setup 2 #act's for this to work example:
  #act {^Xoox the fuzzy hedgehog hands something to Orthas.$}
  #act {^Xoox the fuzzy hedgehog says: I did not have enough coins.$}

TODO: make it possible to setup familiar name.






